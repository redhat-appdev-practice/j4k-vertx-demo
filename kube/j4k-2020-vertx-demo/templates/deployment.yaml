kind: Deployment
apiVersion: apps/v1
metadata:
  name: j4kdemo
  namespace: {{ $.Release.Namespace }}
  labels:
    app: j4kdemo
    app.kubernetes.io/component: j4kdemo
    app.kubernetes.io/instance: j4kdemo
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: j4kdemo
  template:
    metadata:
      creationTimestamp: null
      labels:
        deployment: j4kdemo
    spec:
      serviceAccount: vertxcluster
      serviceAccountName: vertxcluster
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: j4kdemo
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 2
          env:
            - name: KUBERNETES_NAMESPACE
              value: {{ $.Release.Namespace }}
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          image: docker.io/{{ $.Values.dockerUser | default "infosec812" }}/j4k-2020-vertx-kubernetes:v1.0.0-SNAPSHOT
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
